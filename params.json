{"name":"Django mturk minimalistic","tagline":"A minimalistic Django app for Mechanical Turk External Question","body":"Django Amazon Mechanical Turk External Question minimalistic example\r\n====================================================================\r\n\r\nThis is a super small project on how to use Django to show and manage external question for the Amazon Mechanical Turk. \r\n\r\nWhy external questions?\r\n-----------------------\r\nAmazon Mechanical Turk (AMT) comes with a lot of possibilities. However sometimes you just need to do something really hacky on the Javascript side (interactive image segmentation), and the provided built-in functionalities are not addressing your needs. Hopefully, AMT provides the External Question possibility: the question posted on the AMT market is just a redirection to a particular URL you own, with some metadata. \r\n\r\nIn this setup, you can show whatever you want to the end user, interact with him much better. The only limit are your creativity, your skills and your browser.\r\n\r\nWhy Django?\r\n-----------\r\nDjango is a super Framework in Python for doing web applications. It contains a database backend, a nice template for creating the HMTL files shown to the user, and a nice logic for transforming the requested URLs (the one from the AMT) into functions.\r\n\r\nIn this project, we simply use the database backend to store the information that will be shown to the user. We also store in the database how this information is linked to the AMT (the question instances or \"hits\", the results, etc).\r\n\r\nDependencies\r\n------------\r\nThe only dependencies are\r\n\r\n* django\r\n* boto\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}